from loader import dp, bot, client
from utils.database.database import proccess_find_user_by_id
from states.registration import Phone
from validation.validation import  proccess_validate_phone
from keyboards.default import phone_keyboard
from keyboards.default.menu import menu_keyboard

from aiogram.types import CallbackQuery, Message, ParseMode
from aiogram.dispatcher import FSMContext

@dp.callback_query_handler(lambda callback: callback.data == "continue_party")
async def continue_party(callback: CallbackQuery):
    await Phone.phone.set()
    await bot.edit_message_text(message_id=callback.message.message_id,chat_id=callback.from_user.id,text= "–í–≤–µ–¥–∏ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞\n–ü—Ä–∏–º–µ—Ä: +375250000000")
    await bot.send_message(callback.from_user.id, "–ò–ª–∏ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É", reply_markup=phone_keyboard)


@dp.message_handler(content_types="contact", state=Phone.phone)
async def phone_get(message: Message, state=FSMContext):
    match = proccess_validate_phone("+" + str(message.contact.phone_number))
    if match == False:
        id = message.from_user.id
        user = await proccess_find_user_by_id(id)
        await message.answer(f'''
üòé–û—Ç–ª–∏—á–Ω–æ, {user['name']}!

üìù–Ø –ø–µ—Ä–µ–¥–∞–ª —Ç–≤–æ–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã –Ω–∞—à–µ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É, —Å–∫–æ—Ä–æ —Å —Ç–æ–±–æ–π —Å–≤—è–∂—É—Ç—Å—è.

üîé–ê –ø–æ–∫–∞, –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ —É—Å–ª—É–≥ –∏ —Ü–µ–Ω—ã, –¥–ª—è —ç—Ç–æ–≥–æ, –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É "–£—Å–ª—É–≥–∏"   
''',reply_markup=menu_keyboard)    
        await want_party_user(id, user, "+" + message.contact.phone_number)
        await state.finish()
    else:
         await message.reply("ü§î –°—Ç—Ä–∞–Ω–Ω—ã–π –Ω–æ–º–µ—Ä..\n–ü—Ä–æ–≤–µ—Ä—å –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å.\n–ü—Ä–∏–º–µ—Ä: +375250000000")


@dp.message_handler(lambda message: proccess_validate_phone(message.text), state=Phone.phone)
async def process_phone_invalid(message: Message):
        await message.reply("ü§î –°—Ç—Ä–∞–Ω–Ω—ã–π –Ω–æ–º–µ—Ä..\n–ü—Ä–æ–≤–µ—Ä—å –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å.\n–ü—Ä–∏–º–µ—Ä: +375250000000")

@dp.message_handler(state=Phone.phone)
async def proccess_phone_set(message: Message, state=FSMContext):
    async with state.proxy() as _:
        id = message.from_user.id
        user = await proccess_find_user_by_id(id)
        await bot.send_message(id,f'''
üòé–û—Ç–ª–∏—á–Ω–æ, {user['name']}!

üìù–Ø –ø–µ—Ä–µ–¥–∞–ª —Ç–≤–æ–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã –Ω–∞—à–µ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É, —Å–∫–æ—Ä–æ —Å —Ç–æ–±–æ–π —Å–≤—è–∂—É—Ç—Å—è.

üîé–ê –ø–æ–∫–∞, –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ —É—Å–ª—É–≥ –∏ —Ü–µ–Ω—ã, –¥–ª—è —ç—Ç–æ–≥–æ, –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É "–£—Å–ª—É–≥–∏"   
        ''', reply_markup=menu_keyboard)
        await want_party_user(id, user, message.text)
    await state.finish()

async def want_party_user(id, user, phone):
    async with client:
        await client.send_message('sergeyiskander', f'''
[{user['name']}](tg://user?id={user['user_id']}) –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª—Å—è –Ω–∞—à–∏–º–∏ —É—Å–ª—É–≥–∞–º–∏.
–ï–≥–æ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:  {phone}
''', parse_mode="markdown")