from loader import dp, bot, client
from utils.generator.nickname import (
    get_random_female_nickname,
    get_random_male_nickname,
)
from utils.database.database import  (
    proccess_find_user_by_id, 
    get_event_by_invite_code,
)
from keyboards.inline.photo import photo_keyboard
from keyboards.default.menu import menu_keyboard
from keyboards.inline.events import get_event_button
from keyboards.inline.registration import menu_services_keyboard
from states.registration import InputInviteCode

from aiogram.types import Message, InputFile,CallbackQuery , ParseMode, MediaGroup, InputMedia, InputMediaDocument, InputMediaPhoto
from aiogram.dispatcher import FSMContext


@dp.message_handler(lambda message: message.text == "–ö–æ–Ω—Ç–∞–∫—Ç—ã")
async def proccess_view_contact(message: Message):
    id = message.from_user.id
    user = await proccess_find_user_by_id(id)
    if user == None:
        await message.answer("–¢–µ–±–µ —Å—Ç–æ–∏—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è")
    else:
        await message.answer('''
üí´ –ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã:

üì¢ –ú–µ–Ω–µ–¥–∂–µ—Ä: +37529-5-413-413
üì∑ –ò–Ω—Å—Ç–∞–≥—Ä–∞–º - [mafiavero](https://www.instagram.com/mafiavero/)
''', parse_mode=ParseMode.MARKDOWN)


@dp.message_handler(lambda message: message.text == "–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã")
async def proccess_view_rules_games(message: Message):
    id = message.from_user.id
    user = await proccess_find_user_by_id(id)
    if user == None:
        await message.answer("–¢–µ–±–µ —Å—Ç–æ–∏—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è")
    else:
        await message.answer('''
üìñ –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã ¬´–ú–ê–§–ò–Ø¬ª

1. –í –∏–≥—Ä–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç —É—á–∞—Å—Ç–∏–µ –¥–µ—Å—è—Ç—å —á–µ–ª–æ–≤–µ–∫. –°–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –¥–µ–ª—è—Ç—Å—è –Ω–∞ –¥–≤–µ –∫–æ–º–∞–Ω–¥—ã:
‚Äú–ö—Ä–∞—Å–Ω—ã–µ‚Äù (–º–∏—Ä–Ω—ã–µ –∂–∏—Ç–µ–ª–∏) –∏ ‚Äú–ß—ë—Ä–Ω—ã–µ‚Äù (–º–∞—Ñ–∏—è).
–í –∏–≥—Ä–µ —Ä–∞–∑—ã–≥—Ä—ã–≤–∞—é—Ç—Å—è —Å–µ–º—å ‚Äú–∫—Ä–∞—Å–Ω—ã—Ö‚Äù –∫–∞—Ä—Ç, –æ–¥–Ω–∞ –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö ‚Äî –®–µ—Ä–∏—Ñ, –∏ —Ç—Ä–∏ ‚Äú—á—ë—Ä–Ω—ã–µ‚Äù, –æ–¥–Ω–∞ –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö ‚Äî –î–æ–Ω.

2. –í–µ–¥—ë—Ç –∏–≥—Ä—É –∏ —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–∏—Ä—É–µ—Ç –µ—ë —ç—Ç–∞–ø—ã –°—É–¥—å—è. –í–µ–¥–µ–Ω–∏—é –∏–≥—Ä—ã –º–æ–∂–µ—Ç –ø–æ–º–æ–≥–∞—Ç—å –±–æ–∫–æ–≤–æ–π –°—É–¥—å—è.

3. –ò–≥—Ä–∞ –∏–º–µ–µ—Ç –¥–≤–µ —Ñ–∞–∑—ã: —Ñ–∞–∑–∞ ‚Äú–¥–µ–Ω—å‚Äù –∏ —Ñ–∞–∑–∞ ‚Äú–Ω–æ—á—å‚Äù.

4. –ü–æ–±–µ–¥–∞ –∫–æ–º–∞–Ω–¥—ã ‚Äú–∫—Ä–∞—Å–Ω—ã—Ö‚Äù –Ω–∞—Å—Ç—É–ø–∞–µ—Ç –≤ —Ç–æ–º —Å–ª—É—á–∞–µ, –∫–æ–≥–¥–∞ –∏–∑ –∏–≥—Ä—ã –≤—ã–≤–µ–¥–µ–Ω—ã –≤—Å–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª–∏ ‚Äú—á—ë—Ä–Ω–æ–π‚Äù –∫–æ–º–∞–Ω–¥—ã.
–ü–æ–±–µ–¥–∞ ‚Äú—á—ë—Ä–Ω–æ–π‚Äù –∫–æ–º–∞–Ω–¥—ã –Ω–∞—Å—Ç—É–ø–∞–µ—Ç –≤ —Å–ª—É—á–∞–µ, –∫–æ–≥–¥–∞ –∑–∞ –∏–≥—Ä–æ–≤—ã–º —Å—Ç–æ–ª–æ–º –æ—Å—Ç–∞—ë—Ç—Å—è —Ä–∞–≤–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤ –æ–±–µ–∏—Ö –∫–æ–º–∞–Ω–¥ –∏–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ ‚Äú—á–µ—Ä–Ω—ã—Ö‚Äù –∏–≥—Ä–æ–∫–æ–≤ –±–æ–ª—å—à–µ, —á–µ–º ‚Äú–∫—Ä–∞—Å–Ω—ã—Ö‚Äù.


–ü–æ–¥—Ä–æ–±–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã - –≤ —Ñ–∞–π–ª–µ.
''')    
        doc = await bot.send_document(id, document="BQACAgIAAxkDAAOPYJV7FjKAontD4N_pK722vAobcGUAArMNAAKFMKhIBIe7cyRIk0YfBA")


@dp.message_handler(lambda message: message.text == "–£—Å–ª—É–≥–∏")
async def proccess_view_services(message: Message):
    id = message.from_user.id
    user = await proccess_find_user_by_id(id)
    if user == None:
        await message.answer("–¢–µ–±–µ —Å—Ç–æ–∏—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è")
    else:
        await message.answer('''
–° ¬´MAFIA VERO¬ª —Å—Ç–∏–ª—å–Ω–æ, –Ω–µ–æ–±—ã—á–Ω–æ,\n–∞ —Ç–∞–∫ –∂–µ –ø–æ–ª–µ–∑–Ω–æ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è –ª–∏—á–Ω–æ—Å—Ç–∏ –∏ –∫–æ–º–∞–Ω–¥–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è.
–¢–∞–∫–æ–µ –≤–µ—Å–µ–ª–æ–µ, –Ω–µ–æ—Ä–¥–∏–Ω–∞—Ä–Ω–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ 100% –∑–∞–ø–æ–º–Ω–∏—Ç—Å—è\n–ò –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å –µ—â—ë –±—É–¥–µ—Ç —á—Ç–æ –æ–±—Å—É–¥–∏—Ç—å!

–ì–æ—Ç–æ–≤—ã –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –¥–ª—è —Ç–µ–±—è:
üéÇ –î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è
üë®‚Äçüíª –¢–∏–º–±–∏–ª–¥–∏–Ω–≥
ü§ù –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤
ü•É –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤
üß∏ –î–µ—Ç—Å–∫–∞—è –º–∞—Ñ–∏—è
üåè Online-–º–∞—Ñ–∏—è
üß† –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –∫–≤–∏–∑

‚úî –ø–æ–¥ –ª—é–±–æ–π –∫–æ–Ω—Ü–µ–ø—Ç
‚úî –æ—Ç 7 –¥–æ 1000 —á–µ–ª–æ–≤–µ–∫
''', reply_markup=menu_services_keyboard)



@dp.callback_query_handler(lambda callback: callback.data == 'quiz')
async def show_quiz(callback: CallbackQuery):
    id = callback.from_user.id
    await bot.send_message(id, '''
üíé–ö–≤–∏–∑ –ú–æ–∑–∏–∫–∞ - —ç—Ç–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ-—Ä–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–∞—è –∏–≥—Ä–∞, –≤ –∫–æ—Ç–æ—Ä–æ–π –Ω—É–∂–Ω–æ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —Ä–∞–∑–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã (–≤ –æ—Å–Ω–æ–≤–Ω–æ–º –Ω–∞ –ª–æ–≥–∏–∫—É –∏ —ç—Ä—É–¥–∏—Ü–∏—é, –∞ —Ç–∞–∫–∂–µ –ø—Ä–æ –º—É–∑—ã–∫—É –∏ –∫–∏–Ω–æ). 

üìú–ü–æ–¥—Ä–æ–±–Ω—ã–µ —Ü–µ–Ω—ã –∏ —É—Å–ª–æ–≤–∏—è –ø–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—é –ö–≤–∏–∑-–∏–≥—Ä –≤ –ú–æ–∑–∞–π–∫–µ, —Ç—ã –º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å, –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–≤ —Ñ–∞–π–ª:
''')
    await bot.send_document(id, document="BQACAgIAAxkDAAOTYJV7o9n8PbvO0WPK8NsVR6WHCqcAArYNAAKFMKhIqLD3JaQXGa0fBA")


@dp.message_handler(lambda message: message.text == "photo-upload")
async def photo_save(message: Message):
    id = message.from_user.id
    i = 1
    text = "[\n"
    while i < 21:
        photo = await message.answer_photo(InputFile(f"assets/images/img{i}.jpg"))
        text = text + 'InputMediaPhoto(\"' + photo['photo'][0]['file_id'] + '\"),\n'
        i += 1
    print(text)

@dp.message_handler(lambda message: message.text == '–§–æ—Ç–æ –∏ –í–∏–¥–µ–æ')
async def show_photos_videos(callback: CallbackQuery):
    id = callback.from_user.id
    await bot.send_message(id, '''
üì∏–í–∏–¥–µ–æ –∏ —Ñ–æ—Ç–æ —Å –Ω–∞—à–∏—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π

https://youtu.be/YMUi2GlIfbw (–ì–∞–Ω–≥—Å—Ç–µ—Ä—Å–∫–∞—è –≤–µ—á–µ—Ä–∏–Ω–∫–∞)
https://youtu.be/h3OI98If13c (–ò–º–∏–¥–∂–µ–≤—ã–π —Ä–æ–ª–∏–∫)
https://youtu.be/Q2IRXHTeIQE (Peaky Blinders)
https://youtu.be/qJHSZ7qkm74 (–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è —Å –∏–≥—Ä–æ–π –∏ –∫–∞—Å–∫–∞–¥–µ—Ä—Å–∫–∏–π —Ç—Ä—é–∫)
https://youtu.be/Waz914D6reI (–í–µ—á–µ—Ä–∏–Ω–∫–∞ –Ω–∞ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è)
https://youtu.be/gBLjZRwK08w (–í–µ—á–µ—Ä–∏–Ω–∫–∞ —Å –∏–≥—Ä–æ–π)
https://youtu.be/_cuIeew7CmQ (–ú–∞—Ñ–∏—è –Ω–∞ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è)
https://youtu.be/Y9NujYsyXqM (It-—Ç—É—Ä–Ω–∏—Ä)   
''')
    images = [
InputMediaPhoto("AgACAgIAAxkDAANcYJV5wnUZitDsdFakLfhMZXDLc2sAAmy0MRuFMKhI3tiTFP0tVa1sWDefLgADAQADAgADbQADypQDAAEfBA"),
InputMediaPhoto("AgACAgIAAxkDAANdYJV5wpO2vcYtCVlCzUU2Mc8yweYAAnG0MRuFMKhIqLXrYtWd8dC3Q6aiLgADAQADAgADbQADMQoCAAEfBA"),
InputMediaPhoto("AgACAgIAAxkDAANeYJV5wwF3MMuihZ9luilv4m--3sUAAnK0MRuFMKhIk5M04IO6CJLyf1GkLgADAQADAgADbQADB8EAAh8E"),
InputMediaPhoto("AgACAgIAAxkDAANfYJV5w7jIYueqir56-T8FVrra-CwAAnO0MRuFMKhInCxHlcFj9G9qdE6kLgADAQADAgADbQAD7s0AAh8E"),
InputMediaPhoto("AgACAgIAAxkDAANgYJV5xFM9L_lJFXSIz-HAAj317ckAAnS0MRuFMKhImJtAsWZA17PFT4yiLgADAQADAgADbQADtOEBAAEfBA"),
InputMediaPhoto("AgACAgIAAxkDAANhYJV5xEHzpngDx4RuuyI2lliGE4AAAnW0MRuFMKhIQE1RHKG4EexVN0OeLgADAQADAgADbQADfZ0DAAEfBA"),
InputMediaPhoto("AgACAgIAAxkDAANiYJV5xX3_Uzh17VqRT-odJk8mvY8AAna0MRuFMKhIsfBq9zEiX6TY0jWfLgADAQADAgADbQAD6O0DAAEfBA"),
InputMediaPhoto("AgACAgIAAxkDAANjYJV5xiW-OFZpOGyGgcXSNDnrvRkAAne0MRuFMKhIbbLUtR20MawbN0OeLgADAQADAgADbQADd6ADAAEfBA"),
InputMediaPhoto("AgACAgIAAxkDAANkYJV5x-5x7B9r8A23UfSNQi7nuXQAAni0MRuFMKhIJutXOyAcqv4Dp4OfLgADAQADAgADbQADbqkDAAEfBA"),
InputMediaPhoto("AgACAgIAAxkDAANlYJV5x9FFRlflli7FYWhK9gsMwwEAAnm0MRuFMKhIivn97gSFO9XA0Q-bLgADAQADAgADbQADvyUGAAEfBA"),
InputMediaPhoto("AgACAgIAAxkDAANmYJV5yB0kODZ4dcCe51Kw597A7K8AAnq0MRuFMKhInxqQnLNR0EJ68ZOiLgADAQADAgADbQADZt4BAAEfBA"),
InputMediaPhoto("AgACAgIAAxkDAANnYJV5yHdnuvDNRRBESppYuFKr4a0AAnu0MRuFMKhIQ4rq9qkZbnj4-dCiLgADAQADAgADbQADss8BAAEfBA"),
InputMediaPhoto("AgACAgIAAxkDAANoYJV5ya0JKXlidgKiRe37j-y7I00AAny0MRuFMKhIKhaFzIAfKgJuMg-iLgADAQADAgADbQADiOUBAAEfBA"),
InputMediaPhoto("AgACAgIAAxkDAANpYJV5yXcNPuhhnreFfJvNEJZnphwAAn20MRuFMKhILu1bB1NiEoyac06kLgADAQADAgADbQADDdIAAh8E"),
InputMediaPhoto("AgACAgIAAxkDAANqYJV5ynGICeWMByayekk1c3yh4OQAAn60MRuFMKhI9V_uagb7oHIchoedLgADAQADAgADbQADTvYBAAEfBA"),
InputMediaPhoto("AgACAgIAAxkDAANrYJV5y_gNjejBTr6mSUiXsS226vcAAn-0MRuFMKhIlT9QIZo3GwtYIAOeLgADAQADAgADbQADA5cDAAEfBA"),
InputMediaPhoto("AgACAgIAAxkDAANsYJV5y5Cg9puFYPZ3DFeSrNUNK2kAAoC0MRuFMKhIPi2rtO5l_JOTzIqiLgADAQADAgADbQADUP4BAAEfBA"),
InputMediaPhoto("AgACAgIAAxkDAANtYJV5zI4OcRpVX2IxNhfXVGUbT10AAoG0MRuFMKhIBe3teLkUpIy2Z4meLgADAQADAgADbQADQQoGAAEfBA"),
InputMediaPhoto("AgACAgIAAxkDAANuYJV5zFPv-HXPO2LkJJeqM6tmuBkAAoK0MRuFMKhITmnxNSiAjQWBIAOeLgADAQADAgADbQADt5UDAAEfBA"),
InputMediaPhoto("AgACAgIAAxkDAANvYJV5zUZa0bDN7R28ZzA1TWSgzIIAAoO0MRuFMKhIqmD7DjhdQW26zg2eLgADAQADAgADbQADdfYFAAEfBA"),
    ]
    await bot.send_media_group(id, images[0:10])
    await bot.send_message(id, "–ñ–µ–ª–∞–µ—à—å –µ—â–µ —Ñ–æ—Ç–æ?", reply_markup=photo_keyboard)

@dp.callback_query_handler(lambda callback: callback.data == "photos")
async def get_photos(callback: CallbackQuery ):
    id = callback.from_user.id
    images = [
InputMediaPhoto("AgACAgIAAxkDAANcYJV5wnUZitDsdFakLfhMZXDLc2sAAmy0MRuFMKhI3tiTFP0tVa1sWDefLgADAQADAgADbQADypQDAAEfBA"),
InputMediaPhoto("AgACAgIAAxkDAANdYJV5wpO2vcYtCVlCzUU2Mc8yweYAAnG0MRuFMKhIqLXrYtWd8dC3Q6aiLgADAQADAgADbQADMQoCAAEfBA"),
InputMediaPhoto("AgACAgIAAxkDAANeYJV5wwF3MMuihZ9luilv4m--3sUAAnK0MRuFMKhIk5M04IO6CJLyf1GkLgADAQADAgADbQADB8EAAh8E"),
InputMediaPhoto("AgACAgIAAxkDAANfYJV5w7jIYueqir56-T8FVrra-CwAAnO0MRuFMKhInCxHlcFj9G9qdE6kLgADAQADAgADbQAD7s0AAh8E"),
InputMediaPhoto("AgACAgIAAxkDAANgYJV5xFM9L_lJFXSIz-HAAj317ckAAnS0MRuFMKhImJtAsWZA17PFT4yiLgADAQADAgADbQADtOEBAAEfBA"),
InputMediaPhoto("AgACAgIAAxkDAANhYJV5xEHzpngDx4RuuyI2lliGE4AAAnW0MRuFMKhIQE1RHKG4EexVN0OeLgADAQADAgADbQADfZ0DAAEfBA"),
InputMediaPhoto("AgACAgIAAxkDAANiYJV5xX3_Uzh17VqRT-odJk8mvY8AAna0MRuFMKhIsfBq9zEiX6TY0jWfLgADAQADAgADbQAD6O0DAAEfBA"),
InputMediaPhoto("AgACAgIAAxkDAANjYJV5xiW-OFZpOGyGgcXSNDnrvRkAAne0MRuFMKhIbbLUtR20MawbN0OeLgADAQADAgADbQADd6ADAAEfBA"),
InputMediaPhoto("AgACAgIAAxkDAANkYJV5x-5x7B9r8A23UfSNQi7nuXQAAni0MRuFMKhIJutXOyAcqv4Dp4OfLgADAQADAgADbQADbqkDAAEfBA"),
InputMediaPhoto("AgACAgIAAxkDAANlYJV5x9FFRlflli7FYWhK9gsMwwEAAnm0MRuFMKhIivn97gSFO9XA0Q-bLgADAQADAgADbQADvyUGAAEfBA"),
InputMediaPhoto("AgACAgIAAxkDAANmYJV5yB0kODZ4dcCe51Kw597A7K8AAnq0MRuFMKhInxqQnLNR0EJ68ZOiLgADAQADAgADbQADZt4BAAEfBA"),
InputMediaPhoto("AgACAgIAAxkDAANnYJV5yHdnuvDNRRBESppYuFKr4a0AAnu0MRuFMKhIQ4rq9qkZbnj4-dCiLgADAQADAgADbQADss8BAAEfBA"),
InputMediaPhoto("AgACAgIAAxkDAANoYJV5ya0JKXlidgKiRe37j-y7I00AAny0MRuFMKhIKhaFzIAfKgJuMg-iLgADAQADAgADbQADiOUBAAEfBA"),
InputMediaPhoto("AgACAgIAAxkDAANpYJV5yXcNPuhhnreFfJvNEJZnphwAAn20MRuFMKhILu1bB1NiEoyac06kLgADAQADAgADbQADDdIAAh8E"),
InputMediaPhoto("AgACAgIAAxkDAANqYJV5ynGICeWMByayekk1c3yh4OQAAn60MRuFMKhI9V_uagb7oHIchoedLgADAQADAgADbQADTvYBAAEfBA"),
InputMediaPhoto("AgACAgIAAxkDAANrYJV5y_gNjejBTr6mSUiXsS226vcAAn-0MRuFMKhIlT9QIZo3GwtYIAOeLgADAQADAgADbQADA5cDAAEfBA"),
InputMediaPhoto("AgACAgIAAxkDAANsYJV5y5Cg9puFYPZ3DFeSrNUNK2kAAoC0MRuFMKhIPi2rtO5l_JOTzIqiLgADAQADAgADbQADUP4BAAEfBA"),
InputMediaPhoto("AgACAgIAAxkDAANtYJV5zI4OcRpVX2IxNhfXVGUbT10AAoG0MRuFMKhIBe3teLkUpIy2Z4meLgADAQADAgADbQADQQoGAAEfBA"),
InputMediaPhoto("AgACAgIAAxkDAANuYJV5zFPv-HXPO2LkJJeqM6tmuBkAAoK0MRuFMKhITmnxNSiAjQWBIAOeLgADAQADAgADbQADt5UDAAEfBA"),
InputMediaPhoto("AgACAgIAAxkDAANvYJV5zUZa0bDN7R28ZzA1TWSgzIIAAoO0MRuFMKhIqmD7DjhdQW26zg2eLgADAQADAgADbQADdfYFAAEfBA"),
    ]
    await bot.delete_message(id, callback.message.message_id)
    await bot.send_media_group(id, images[10:20])
    


@dp.callback_query_handler(lambda callback: callback.data == 'price')
async def show_price(callback: CallbackQuery):
    id = callback.from_user.id
    await bot.send_message(id, '''
üìú–ü–æ–¥—Ä–æ–±–Ω—ã–µ —Ü–µ–Ω—ã –∏ —É—Å–ª–æ–≤–∏—è —Ç—ã –º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å, –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–≤ —Ñ–∞–π–ª—ã: 
''')
    docs = [
       InputMediaDocument("BQACAgIAAxkDAAOpYJV9sQAB_WyhUnB4OaJyz9iYcwWOAALEDQAChTCoSANj-8Xr19WmHwQ"),
       InputMediaDocument("BQACAgIAAxkDAAOqYJV9tav31IcazY5PneMZgaOFv5YAAsUNAAKFMKhIHwP7qz-cVdkfBA"),
       InputMediaDocument("BQACAgIAAxkDAAOrYJV9t83XufW1vXSi8aVILD3XeuAAAsYNAAKFMKhI8C72eBwH0LQfBA"),
    ]

    await bot.send_media_group(id, docs)


@dp.message_handler(lambda message: message.text == "–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –Ω–∏–∫–Ω–µ–π–º–æ–≤")
async def proccess_generation_nickname(message: Message):
    id = message.from_user.id
    user = await proccess_find_user_by_id(id)
    print(user)
    if user == None:
        await message.answer("–¢–µ–±–µ —Å—Ç–æ–∏—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è")
    else:
        if user['gender'] == 'man':
            nickname = get_random_male_nickname()
            await message.answer(f"‚úè {user['name']}, —Ç–≤–æ–π –Ω–∏–∫–Ω–µ–π–º - {nickname}")
        else:
            nickname = get_random_female_nickname()
            await message.answer(f"‚úè {user['name']}, —Ç–≤–æ–π –Ω–∏–∫–Ω–µ–π–º - {nickname}")


@dp.message_handler(lambda message: message.text == "–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è")
async def proccess_get_events(message: Message):
    id = message.from_user.id
    user = await proccess_find_user_by_id(id)
    if user == None:
        await message.answer("–¢–µ–±–µ —Å—Ç–æ–∏—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è")
    else:
        await InputInviteCode.invite_code.set()
        await message.answer(f"‚úèÔ∏è {user['name']}, –≤–≤–µ–¥–∏ –∫–æ–¥ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è,\n–∫–æ—Ç–æ—Ä—ã–π —Ç–µ–±–µ –≤—ã–¥–∞–ª–∏ –Ω–∞ –º–∞—Ñ–∏–∏: ")


@dp.message_handler(state=InputInviteCode.invite_code)
async def proccess_invite_code(message: Message, state=FSMContext):
    async with state.proxy() as _:
        event = await get_event_by_invite_code(message.text)
        user = await proccess_find_user_by_id(message.from_user.id)

        if event == None:
            await message.reply("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∫–æ–¥ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è...")
        else:
            users = await get_users_chat(event['chat_id'])
            if message.from_user.id not in users:
                button = await get_event_button(event)
                try:
                    await add_user(event['chat_id'], message.from_user.username)
                    await message.answer("üòå–û—Ç–ª–∏—á–Ω–æ! –î–æ–±–∞–≤–∏–ª —Ç–µ–±—è –≤ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ, –ø—Ä–æ–≤–µ—Ä—è–π —á–∞—Ç—ã.", reply_markup=button)
                except:
                    await message.answer("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–µ —Å–º–æ–≥ –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ–±—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.\n–ó–∞—Ö–æ–¥–∏ –≤ —á–∞—Ç!", reply_markup=button)
            else:
                await message.answer("–¢—ã —É–∂–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—à—å –≤ —ç—Ç–æ–º —á–∞—Ç–µ.")
        await state.finish()



async def add_user(chat_id, uid):
    async with client:
        await client.add_chat_members(chat_id, uid)


async def get_users_chat(chat_id: int):
    async with client:
        users = await client.get_chat_members(chat_id)
        users_ids = [int(users[element]['user']['id']) for element in range(len(users)-1)]
        return users_ids
